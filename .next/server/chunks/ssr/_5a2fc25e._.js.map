{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/Components/BasicTitle/BasicTitle.tsx"],"sourcesContent":["import { BasicTitleProps } from \"./BasicTitle.interface\";\r\n\r\nexport default function BasicTitle(props: BasicTitleProps) {\r\n    return (\r\n        <div\r\n            className=\"w-full h-auto flex justify-center items-center mb-[15px]\"\r\n        >\r\n            <h1\r\n                className=\"text-[60px] font-extrabold\"\r\n            >\r\n                {props.text.toUpperCase()}\r\n            </h1>\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;;AAEe,SAAS,WAAW,KAAsB;IACrD,qBACI,8OAAC;QACG,WAAU;kBAEV,cAAA,8OAAC;YACG,WAAU;sBAET,MAAM,IAAI,CAAC,WAAW;;;;;;;;;;;AAIvC","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/lib/routesInfo.ts"],"sourcesContent":["export const RouteNames = {\r\n    main: \"/\",\r\n    news: \"/news\",\r\n    team: \"/team\",\r\n    club: \"/club\",\r\n    matches: \"/matches\",\r\n    stadium: \"/stadium\",\r\n    contacts: \"/contacts\",\r\n}\r\n\r\n\r\nexport const RoutesHeader = [\r\n    {title: \"Главная\", path: RouteNames.main},\r\n    { title: \"Новости\", path: RouteNames.news },\r\n    { title: \"Команда\", path: RouteNames.team },\r\n    { title: \"Клуб\", path: RouteNames.club },\r\n    { title: \"Матчи\", path: RouteNames.matches },\r\n    { title: \"Стадион\", path: RouteNames.stadium },\r\n    { title: \"Контакты\", path: RouteNames.contacts },\r\n]\r\n\r\n"],"names":[],"mappings":";;;;AAAO,MAAM,aAAa;IACtB,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,SAAS;IACT,SAAS;IACT,UAAU;AACd;AAGO,MAAM,eAAe;IACxB;QAAC,OAAO;QAAW,MAAM,WAAW,IAAI;IAAA;IACxC;QAAE,OAAO;QAAW,MAAM,WAAW,IAAI;IAAC;IAC1C;QAAE,OAAO;QAAW,MAAM,WAAW,IAAI;IAAC;IAC1C;QAAE,OAAO;QAAQ,MAAM,WAAW,IAAI;IAAC;IACvC;QAAE,OAAO;QAAS,MAAM,WAAW,OAAO;IAAC;IAC3C;QAAE,OAAO;QAAW,MAAM,WAAW,OAAO;IAAC;IAC7C;QAAE,OAAO;QAAY,MAAM,WAAW,QAAQ;IAAC;CAClD","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/Components/NearestMatches/NearestMatchElement.tsx"],"sourcesContent":["import Link from \"next/link\";\r\nimport { NearestMatchElementProps } from \"./NearestMatchElement.interface\";\r\nimport NearestMatchTeamIcon from \"./NearestMatchTeamIcon\";\r\nimport { RouteNames } from \"@/lib/routesInfo\";\r\n\r\nexport default function NearestMatchElement(props: NearestMatchElementProps) {\r\n\r\n    const matchDate = new Date(props.date);\r\n    const formatedDateString = matchDate.toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit' })\r\n\r\n    const scores = (() => {\r\n        if (props.score) {\r\n            return props.score?.split(':');\r\n        } else {\r\n            return ['-', '-']\r\n        }\r\n    })()\r\n\r\n    return (\r\n        <div\r\n            className=\"w-[360px] h-[360px] border rounded-[20px] flex flex-col justify-center text-center overflow-hidden p-[5px]\"\r\n        >\r\n            {/* <div>\r\n\r\n            </div> */}\r\n            <div\r\n                className=\"flex flex-1 flex-col justify-center\"\r\n            >\r\n                <p\r\n                    className=\"text-[20px] font-light\"\r\n                >\r\n                    {props.matchType.toUpperCase()}\r\n                </p>\r\n                <div className=\"flex flex-row justify-center h-[100px] p-[5px] text-[30px] font-bold\">\r\n                    <div className=\"w-[220px] flex flex-row\">\r\n                        <p className=\"font-extrabold text-center flex-1\">\r\n                            {formatedDateString}\r\n                        </p>\r\n                        <p className=\"w-[21px]\"> | </p>\r\n                        <p className=\"font-extrabold text-center flex-1\">\r\n                            {props.time}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <p\r\n                    className=\"text-[20px] font-light\"\r\n                >\r\n                    Стадион «{props.stadium}»\r\n                </p>\r\n            </div>\r\n            <div\r\n                className=\"flex flex-1 flex-col justify-center gap-[5px]\"\r\n            >\r\n                <div className=\"flex flex-row justify-center h-[100px] p-[5px]\">\r\n                    <NearestMatchTeamIcon />\r\n                    <div className=\"w-[192px] text-[60px] flex flex-row\">\r\n                        <p className=\"font-extrabold text-center flex-1 align-middle\">\r\n                            {scores[0]}\r\n                        </p>\r\n                        <p className=\"w-[21px] text-[60px] text-center font-extrabold align-middle leading-[1.35]\">:</p>\r\n                        <p className=\"font-extrabold text-center flex-1 align-middle\">\r\n                            {scores[1]}\r\n                        </p>\r\n                    </div>\r\n                    <NearestMatchTeamIcon />\r\n                </div>\r\n                <div className=\"flex justify-center items-center\">\r\n                    <Link\r\n                        href={RouteNames.matches + '/' + props.id}\r\n                        className=\"w-[172.5px] h-[37px] flex justify-center items-center border rounded-[20px] hover:bg-[#FFFFFF] hover:text-[#00102D] transition-all duration-300 linear\"\r\n                    >\r\n                        <p className=\"text-[20px] font-light\">\r\n                            ПОДРОБНЕЕ\r\n                        </p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAAA;;;;;;AAGA;;;;;AAEe,SAAS,oBAAoB,KAA+B;IAEvE,MAAM,YAAY,IAAI,KAAK,MAAM,IAAI;IACrC,MAAM,qBAAqB,UAAU,kBAAkB,CAAC,SAAS;QAAE,KAAK;QAAW,OAAO;IAAU;IAEpG,MAAM,SAAS,CAAC;QACZ,IAAI,MAAM,KAAK,EAAE;YACb,OAAO,MAAM,KAAK,EAAE,MAAM;QAC9B,OAAO;YACH,OAAO;gBAAC;gBAAK;aAAI;QACrB;IACJ,CAAC;IAED,qBACI,8OAAC;QACG,WAAU;;0BAKV,8OAAC;gBACG,WAAU;;kCAEV,8OAAC;wBACG,WAAU;kCAET,MAAM,SAAS,CAAC,WAAW;;;;;;kCAEhC,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAE,WAAU;8CACR;;;;;;8CAEL,8OAAC;oCAAE,WAAU;8CAAW;;;;;;8CACxB,8OAAC;oCAAE,WAAU;8CACR,MAAM,IAAI;;;;;;;;;;;;;;;;;kCAIvB,8OAAC;wBACG,WAAU;;4BACb;4BACa,MAAM,OAAO;4BAAC;;;;;;;;;;;;;0BAGhC,8OAAC;gBACG,WAAU;;kCAEV,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;;;;;0CACD,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAE,WAAU;kDACR,MAAM,CAAC,EAAE;;;;;;kDAEd,8OAAC;wCAAE,WAAU;kDAA8E;;;;;;kDAC3F,8OAAC;wCAAE,WAAU;kDACR,MAAM,CAAC,EAAE;;;;;;;;;;;;0CAGlB,8OAAC;;;;;;;;;;;kCAEL,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BACD,MAAM,iHAAA,CAAA,aAAU,CAAC,OAAO,GAAG,MAAM,MAAM,EAAE;4BACzC,WAAU;sCAEV,cAAA,8OAAC;gCAAE,WAAU;0CAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ9D","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/Components/NearestMatches/NearestMatches.tsx"],"sourcesContent":["import BasicTitle from \"../BasicTitle/BasicTitle\"\r\nimport NearestMatchElement from \"./NearestMatchElement\"\r\n\r\nexport default function NearestMatches() {\r\n\r\n    const LastThreeMatches = [\r\n        { id: 1, matchType: \"Товарищеский матч\", date: '2025-03-22', time: '14:00', stadium: 'СШОР Зенит-Ижевск', opposingTeam: \"ФК Ильпар\", score: '82:11' },\r\n        { id: 2, matchType: \"Товарищеский матч\", date: '2025-04-02', time: '15:00', stadium: 'СШОР Зенит-Ижевск', opposingTeam: \"ФК Шумбрат\", score: '13:1' },\r\n        { id: 3, matchType: \"Товарищеский матч\", date: '2025-04-12', time: '11:00', stadium: 'СШОР Зенит-Ижевск', opposingTeam: \"ФК Волга\", score: '0:0' }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"flex justify-center pt-[30px] pb-[30px]\">\r\n            <div\r\n                className=\" max-w-[1200px]\"\r\n            >\r\n                <BasicTitle text=\"Ближайшие матчи\" />\r\n                <div\r\n                    className=\"flex flex-row gap-[40px]\"\r\n                >\r\n                    {LastThreeMatches.map((match) => {\r\n                        const { id, matchType, date, time, stadium, opposingTeam, score } = match;\r\n                        return (\r\n                            <NearestMatchElement\r\n                                key={matchType + '-id=' + id}\r\n                                id={id}\r\n                                matchType={matchType}\r\n                                date={date}\r\n                                time={time}\r\n                                stadium={stadium}\r\n                                opposingTeam={opposingTeam}\r\n                                score={score}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IAEpB,MAAM,mBAAmB;QACrB;YAAE,IAAI;YAAG,WAAW;YAAqB,MAAM;YAAc,MAAM;YAAS,SAAS;YAAqB,cAAc;YAAa,OAAO;QAAQ;QACpJ;YAAE,IAAI;YAAG,WAAW;YAAqB,MAAM;YAAc,MAAM;YAAS,SAAS;YAAqB,cAAc;YAAc,OAAO;QAAO;QACpJ;YAAE,IAAI;YAAG,WAAW;YAAqB,MAAM;YAAc,MAAM;YAAS,SAAS;YAAqB,cAAc;YAAY,OAAO;QAAM;KACpJ;IAED,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YACG,WAAU;;8BAEV,8OAAC,uIAAA,CAAA,UAAU;oBAAC,MAAK;;;;;;8BACjB,8OAAC;oBACG,WAAU;8BAET,iBAAiB,GAAG,CAAC,CAAC;wBACnB,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG;wBACpE,qBACI,8OAAC,oJAAA,CAAA,UAAmB;4BAEhB,IAAI;4BACJ,WAAW;4BACX,MAAM;4BACN,MAAM;4BACN,SAAS;4BACT,cAAc;4BACd,OAAO;2BAPF,YAAY,SAAS;;;;;oBAUtC;;;;;;;;;;;;;;;;;AAKpB","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/Components/NewsCarousel/NewsCarousel.tsx"],"sourcesContent":["\r\nexport default function NewsCarousel() {\r\n\r\n    const LastFiveNews = [\r\n        { id: 1, title: \"First slide\", img: '' },\r\n        { id: 2, title: \"Second slide\", img: '' },\r\n        { id: 3, title: \"Third slide\", img: '' },\r\n        { id: 4, title: \"Fourth slide\", img: '' },\r\n        { id: 5, title: \"Fifth slide\", img: '' }\r\n    ];\r\n\r\n    return (\r\n        <div\r\n            className=\"h-[870px] w-full overflow-hidden flex justify-center items-center shrink-0 \"\r\n        >\r\n            <img\r\n                src={'/images/Default-Carousel-Image.png'}  \r\n                className=\"w-full h-full object-cover\"\r\n                alt=\"Фон слайдера\" />\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":";;;;;AACe,SAAS;IAEpB,MAAM,eAAe;QACjB;YAAE,IAAI;YAAG,OAAO;YAAe,KAAK;QAAG;QACvC;YAAE,IAAI;YAAG,OAAO;YAAgB,KAAK;QAAG;QACxC;YAAE,IAAI;YAAG,OAAO;YAAe,KAAK;QAAG;QACvC;YAAE,IAAI;YAAG,OAAO;YAAgB,KAAK;QAAG;QACxC;YAAE,IAAI;YAAG,OAAO;YAAe,KAAK;QAAG;KAC1C;IAED,qBACI,8OAAC;QACG,WAAU;kBAEV,cAAA,8OAAC;YACG,KAAK;YACL,WAAU;YACV,KAAI;;;;;;;;;;;AAGpB","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/app/page.tsx"],"sourcesContent":["import NearestMatches from \"@/Components/NearestMatches/NearestMatches\";\nimport NewsCarousel from \"@/Components/NewsCarousel/NewsCarousel\";\n\nexport default function Home() {\n  return (\n    <div>\n      <div className=\"h-[850px] w-full block\">\n        <NewsCarousel />\n        <NearestMatches/>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;kBACC,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,2IAAA,CAAA,UAAY;;;;;8BACb,8OAAC,+IAAA,CAAA,UAAc;;;;;;;;;;;;;;;;AAIvB","debugId":null}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/node_modules/next/dist/client/app-dir/link.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/app-dir/link.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/node_modules/next/dist/client/app-dir/link.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/app-dir/link.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/node_modules/next/src/client/app-dir/link.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useOptimistic, useRef } from 'react'\nimport type { UrlObject } from 'url'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport { AppRouterContext } from '../../shared/lib/app-router-context.shared-runtime'\nimport { PrefetchKind } from '../components/router-reducer/router-reducer-types'\nimport { useMergedRef } from '../use-merged-ref'\nimport { isAbsoluteUrl } from '../../shared/lib/utils'\nimport { addBasePath } from '../add-base-path'\nimport { warnOnce } from '../../shared/lib/utils/warn-once'\nimport type { PENDING_LINK_STATUS } from '../components/links'\nimport {\n  IDLE_LINK_STATUS,\n  mountLinkInstance,\n  onNavigationIntent,\n  unmountLinkForCurrentNavigation,\n  unmountPrefetchableInstance,\n  type LinkInstance,\n} from '../components/links'\nimport { isLocalURL } from '../../shared/lib/router/utils/is-local-url'\nimport { dispatchNavigateAction } from '../components/app-router-instance'\nimport { errorOnce } from '../../shared/lib/utils/error-once'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype OnNavigateEventHandler = (event: { preventDefault: () => void }) => void\n\ntype InternalLinkProps = {\n  /**\n   * **Required**. The path or URL to navigate to. It can also be an object (similar to `URL`).\n   *\n   * @example\n   * ```tsx\n   * // Navigate to /dashboard:\n   * <Link href=\"/dashboard\">Dashboard</Link>\n   *\n   * // Navigate to /about?name=test:\n   * <Link href={{ pathname: '/about', query: { name: 'test' } }}>\n   *   About\n   * </Link>\n   * ```\n   *\n   * @remarks\n   * - For external URLs, use a fully qualified URL such as `https://...`.\n   * - In the App Router, dynamic routes must not include bracketed segments in `href`.\n   */\n  href: Url\n\n  /**\n   * @deprecated v10.0.0: `href` props pointing to a dynamic route are\n   * automatically resolved and no longer require the `as` prop.\n   */\n  as?: Url\n\n  /**\n   * Replace the current `history` state instead of adding a new URL into the stack.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/about\" replace>\n   *   About (replaces the history state)\n   * </Link>\n   * ```\n   */\n  replace?: boolean\n\n  /**\n   * Whether to override the default scroll behavior. If `true`, Next.js attempts to maintain\n   * the scroll position if the newly navigated page is still visible. If not, it scrolls to the top.\n   *\n   * If `false`, Next.js will not modify the scroll behavior at all.\n   *\n   * @defaultValue `true`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" scroll={false}>\n   *   No auto scroll\n   * </Link>\n   * ```\n   */\n  scroll?: boolean\n\n  /**\n   * Update the path of the current page without rerunning data fetching methods\n   * like `getStaticProps`, `getServerSideProps`, or `getInitialProps`.\n   *\n   * @remarks\n   * `shallow` only applies to the Pages Router. For the App Router, see the\n   * [following documentation](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#using-the-native-history-api).\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/blog\" shallow>\n   *   Shallow navigation\n   * </Link>\n   * ```\n   */\n  shallow?: boolean\n\n  /**\n   * Forces `Link` to pass its `href` to the child component. Useful if the child is a custom\n   * component that wraps an `<a>` tag, or if you're using certain styling libraries.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" passHref>\n   *   <MyStyledAnchor>Dashboard</MyStyledAnchor>\n   * </Link>\n   * ```\n   */\n  passHref?: boolean\n\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`.\n   *\n   * @remarks\n   * Prefetching is only enabled in production.\n   *\n   * - In the **App Router**:\n   *   - `null` (default): Prefetch behavior depends on static vs dynamic routes:\n   *     - Static routes: fully prefetched\n   *     - Dynamic routes: partial prefetch to the nearest segment with a `loading.js`\n   *   - `true`: Always prefetch the full route and data.\n   *   - `false`: Disable prefetching on both viewport and hover.\n   * - In the **Pages Router**:\n   *   - `true` (default): Prefetches the route and data in the background on viewport or hover.\n   *   - `false`: Prefetch only on hover, not on viewport.\n   *\n   * @defaultValue `true` (Pages Router) or `null` (App Router)\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" prefetch={false}>\n   *   Dashboard\n   * </Link>\n   * ```\n   */\n  prefetch?: boolean | null\n\n  /**\n   * (unstable) Switch to a dynamic prefetch on hover. Effectively the same as\n   * updating the prefetch prop to `true` in a mouse event.\n   */\n  unstable_dynamicOnHover?: boolean\n\n  /**\n   * The active locale is automatically prepended in the Pages Router. `locale` allows for providing\n   * a different locale, or can be set to `false` to opt out of automatic locale behavior.\n   *\n   * @remarks\n   * Note: locale only applies in the Pages Router and is ignored in the App Router.\n   *\n   * @example\n   * ```tsx\n   * // Use the 'fr' locale:\n   * <Link href=\"/about\" locale=\"fr\">\n   *   About (French)\n   * </Link>\n   *\n   * // Disable locale prefix:\n   * <Link href=\"/about\" locale={false}>\n   *   About (no locale prefix)\n   * </Link>\n   * ```\n   */\n  locale?: string | false\n\n  /**\n   * Enable legacy link behavior, requiring an `<a>` tag to wrap the child content\n   * if the child is a string or number.\n   *\n   * @deprecated This will be removed in v16\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n\n  /**\n   * Optional event handler for when the mouse pointer is moved onto the `<Link>`.\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is navigated.\n   */\n  onNavigate?: OnNavigateEventHandler\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<Omit<InternalLinkProps, 'locale'>>\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  href: string,\n  as: string,\n  linkInstanceRef: React.RefObject<LinkInstance | null>,\n  replace?: boolean,\n  scroll?: boolean,\n  onNavigate?: OnNavigateEventHandler\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (\n    (isAnchorNodeName && isModifiedEvent(e)) ||\n    e.currentTarget.hasAttribute('download')\n  ) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  if (!isLocalURL(href)) {\n    if (replace) {\n      // browser default behavior does not replace the history state\n      // so we need to do it manually\n      e.preventDefault()\n      location.replace(href)\n    }\n\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    if (onNavigate) {\n      let isDefaultPrevented = false\n\n      onNavigate({\n        preventDefault: () => {\n          isDefaultPrevented = true\n        },\n      })\n\n      if (isDefaultPrevented) {\n        return\n      }\n    }\n\n    dispatchNavigateAction(\n      as || href,\n      replace ? 'replace' : 'push',\n      scroll ?? true,\n      linkInstanceRef.current\n    )\n  }\n\n  React.startTransition(navigate)\n}\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide\n * [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation. This is the primary way to navigate between routes in Next.js.\n *\n * @remarks\n * - Prefetching is only enabled in production.\n *\n * @see https://nextjs.org/docs/app/api-reference/components/link\n */\nexport default function LinkComponent(\n  props: LinkProps & {\n    children: React.ReactNode\n    ref: React.Ref<HTMLAnchorElement>\n  }\n) {\n  const [linkStatus, setOptimisticLinkStatus] = useOptimistic(IDLE_LINK_STATUS)\n\n  let children: React.ReactNode\n\n  const linkInstanceRef = useRef<LinkInstance | null>(null)\n\n  const {\n    href: hrefProp,\n    as: asProp,\n    children: childrenProp,\n    prefetch: prefetchProp = null,\n    passHref,\n    replace,\n    shallow,\n    scroll,\n    onClick,\n    onMouseEnter: onMouseEnterProp,\n    onTouchStart: onTouchStartProp,\n    legacyBehavior = false,\n    onNavigate,\n    ref: forwardedRef,\n    unstable_dynamicOnHover,\n    ...restProps\n  } = props\n\n  children = childrenProp\n\n  if (\n    legacyBehavior &&\n    (typeof children === 'string' || typeof children === 'number')\n  ) {\n    children = <a>{children}</a>\n  }\n\n  const router = React.useContext(AppRouterContext)\n\n  const prefetchEnabled = prefetchProp !== false\n  /**\n   * The possible states for prefetch are:\n   * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n   * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n   * - false: we will not prefetch if in the viewport at all\n   * - 'unstable_dynamicOnHover': this starts in \"auto\" mode, but switches to \"full\" when the link is hovered\n   */\n  const appPrefetchKind =\n    prefetchProp === null ? PrefetchKind.AUTO : PrefetchKind.FULL\n\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args: {\n      key: string\n      expected: string\n      actual: string\n    }) {\n      return new Error(\n        `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n          (typeof window !== 'undefined'\n            ? \"\\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n      href: true,\n    } as const\n    const requiredProps: LinkPropsRequired[] = Object.keys(\n      requiredPropsGuard\n    ) as LinkPropsRequired[]\n    requiredProps.forEach((key: LinkPropsRequired) => {\n      if (key === 'href') {\n        if (\n          props[key] == null ||\n          (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n        ) {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key],\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      unstable_dynamicOnHover: true,\n      onClick: true,\n      onMouseEnter: true,\n      onTouchStart: true,\n      legacyBehavior: true,\n      onNavigate: true,\n    } as const\n    const optionalProps: LinkPropsOptional[] = Object.keys(\n      optionalPropsGuard\n    ) as LinkPropsOptional[]\n    optionalProps.forEach((key: LinkPropsOptional) => {\n      const valType = typeof props[key]\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'onClick' ||\n        key === 'onMouseEnter' ||\n        key === 'onTouchStart' ||\n        key === 'onNavigate'\n      ) {\n        if (props[key] && valType !== 'function') {\n          throw createPropError({\n            key,\n            expected: '`function`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'replace' ||\n        key === 'scroll' ||\n        key === 'shallow' ||\n        key === 'passHref' ||\n        key === 'prefetch' ||\n        key === 'legacyBehavior' ||\n        key === 'unstable_dynamicOnHover'\n      ) {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType,\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.locale) {\n      warnOnce(\n        'The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization'\n      )\n    }\n    if (!asProp) {\n      let href: string | undefined\n      if (typeof hrefProp === 'string') {\n        href = hrefProp\n      } else if (\n        typeof hrefProp === 'object' &&\n        typeof hrefProp.pathname === 'string'\n      ) {\n        href = hrefProp.pathname\n      }\n\n      if (href) {\n        const hasDynamicSegment = href\n          .split('/')\n          .some((segment) => segment.startsWith('[') && segment.endsWith(']'))\n\n        if (hasDynamicSegment) {\n          throw new Error(\n            `Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`\n          )\n        }\n      }\n    }\n  }\n\n  const { href, as } = React.useMemo(() => {\n    const resolvedHref = formatStringOrUrl(hrefProp)\n    return {\n      href: resolvedHref,\n      as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n    }\n  }, [hrefProp, asProp])\n\n  // This will return the first child, if multiple are provided it will throw an error\n  let child: any\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      if (onClick) {\n        console.warn(\n          `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n        )\n      }\n      if (onMouseEnterProp) {\n        console.warn(\n          `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n        )\n      }\n      try {\n        child = React.Children.only(children)\n      } catch (err) {\n        if (!children) {\n          throw new Error(\n            `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n          )\n        }\n        throw new Error(\n          `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n            (typeof window !== 'undefined'\n              ? \" \\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n    } else {\n      child = React.Children.only(children)\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if ((children as any)?.type === 'a') {\n        throw new Error(\n          'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n        )\n      }\n    }\n  }\n\n  const childRef: any = legacyBehavior\n    ? child && typeof child === 'object' && child.ref\n    : forwardedRef\n\n  // Use a callback ref to attach an IntersectionObserver to the anchor tag on\n  // mount. In the future we will also use this to keep track of all the\n  // currently mounted <Link> instances, e.g. so we can re-prefetch them after\n  // a revalidation or refresh.\n  const observeLinkVisibilityOnMount = React.useCallback(\n    (element: HTMLAnchorElement | SVGAElement) => {\n      if (router !== null) {\n        linkInstanceRef.current = mountLinkInstance(\n          element,\n          href,\n          router,\n          appPrefetchKind,\n          prefetchEnabled,\n          setOptimisticLinkStatus\n        )\n      }\n\n      return () => {\n        if (linkInstanceRef.current) {\n          unmountLinkForCurrentNavigation(linkInstanceRef.current)\n          linkInstanceRef.current = null\n        }\n        unmountPrefetchableInstance(element)\n      }\n    },\n    [prefetchEnabled, href, router, appPrefetchKind, setOptimisticLinkStatus]\n  )\n\n  const mergedRef = useMergedRef(observeLinkVisibilityOnMount, childRef)\n\n  const childProps: {\n    onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n    onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n    onClick: React.MouseEventHandler<HTMLAnchorElement>\n    href?: string\n    ref?: any\n  } = {\n    ref: mergedRef,\n    onClick(e) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!e) {\n          throw new Error(\n            `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n          )\n        }\n      }\n\n      if (!legacyBehavior && typeof onClick === 'function') {\n        onClick(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onClick === 'function'\n      ) {\n        child.props.onClick(e)\n      }\n\n      if (!router) {\n        return\n      }\n\n      if (e.defaultPrevented) {\n        return\n      }\n\n      linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate)\n    },\n    onMouseEnter(e) {\n      if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n        onMouseEnterProp(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onMouseEnter === 'function'\n      ) {\n        child.props.onMouseEnter(e)\n      }\n\n      if (!router) {\n        return\n      }\n\n      if (!prefetchEnabled || process.env.NODE_ENV === 'development') {\n        return\n      }\n\n      const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n      onNavigationIntent(\n        e.currentTarget as HTMLAnchorElement | SVGAElement,\n        upgradeToDynamicPrefetch\n      )\n    },\n    onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n      ? undefined\n      : function onTouchStart(e) {\n          if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n            onTouchStartProp(e)\n          }\n\n          if (\n            legacyBehavior &&\n            child.props &&\n            typeof child.props.onTouchStart === 'function'\n          ) {\n            child.props.onTouchStart(e)\n          }\n\n          if (!router) {\n            return\n          }\n\n          if (!prefetchEnabled) {\n            return\n          }\n\n          const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n          onNavigationIntent(\n            e.currentTarget as HTMLAnchorElement | SVGAElement,\n            upgradeToDynamicPrefetch\n          )\n        },\n  }\n\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user.\n  // If the url is absolute, we can bypass the logic to prepend the basePath.\n  if (isAbsoluteUrl(as)) {\n    childProps.href = as\n  } else if (\n    !legacyBehavior ||\n    passHref ||\n    (child.type === 'a' && !('href' in child.props))\n  ) {\n    childProps.href = addBasePath(as)\n  }\n\n  let link: React.ReactNode\n\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      errorOnce(\n        '`legacyBehavior` is deprecated and will be removed in a future ' +\n          'release. A codemod is available to upgrade your components:\\n\\n' +\n          'npx @next/codemod@latest new-link .\\n\\n' +\n          'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components'\n      )\n    }\n    link = React.cloneElement(child, childProps)\n  } else {\n    link = (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n\n  return (\n    <LinkStatusContext.Provider value={linkStatus}>\n      {link}\n    </LinkStatusContext.Provider>\n  )\n}\n\nconst LinkStatusContext = createContext<\n  typeof PENDING_LINK_STATUS | typeof IDLE_LINK_STATUS\n>(IDLE_LINK_STATUS)\n\nexport const useLinkStatus = () => {\n  return useContext(LinkStatusContext)\n}\n"],"names":["LinkComponent","useLinkStatus","isModifiedEvent","event","eventTarget","currentTarget","target","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","linkClicked","e","href","as","linkInstanceRef","replace","scroll","onNavigate","nodeName","isAnchorNodeName","toUpperCase","hasAttribute","isLocalURL","preventDefault","location","navigate","isDefaultPrevented","dispatchNavigateAction","current","React","startTransition","formatStringOrUrl","urlObjOrString","formatUrl","props","linkStatus","setOptimisticLinkStatus","useOptimistic","IDLE_LINK_STATUS","children","useRef","hrefProp","asProp","childrenProp","prefetch","prefetchProp","passHref","shallow","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","ref","forwardedRef","unstable_dynamicOnHover","restProps","a","router","useContext","AppRouterContext","prefetchEnabled","appPrefetchKind","PrefetchKind","AUTO","FULL","process","env","NODE_ENV","createPropError","args","Error","key","expected","actual","window","requiredPropsGuard","requiredProps","Object","keys","forEach","_","optionalPropsGuard","optionalProps","valType","locale","warnOnce","pathname","hasDynamicSegment","split","some","segment","startsWith","endsWith","useMemo","resolvedHref","child","console","warn","Children","only","err","type","childRef","observeLinkVisibilityOnMount","useCallback","element","mountLinkInstance","unmountLinkForCurrentNavigation","unmountPrefetchableInstance","mergedRef","useMergedRef","childProps","defaultPrevented","upgradeToDynamicPrefetch","onNavigationIntent","__NEXT_LINK_NO_TOUCH_START","undefined","isAbsoluteUrl","addBasePath","link","errorOnce","cloneElement","LinkStatusContext","Provider","value","createContext"],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAEgG,EAAC;QAwBnHe,UAAU;;;;;;;;;AAfd,OAAO,MAAMZ,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA,CAED;YAAA,WAAc,0CAA0C;kBAAE,QAAA,CAAA;gBAAA,QAAA;oBAAwB,IAAA;oBAAA;iBAAA;YAAsB;SAAC;IAEzG;IAAA,yDAA4D;QAC5D,KAAO,KAAA;YAAMC,IAAAA,QAAc,IAAIX;YAAAA,CAAmB;SAAA;UAChDY,WAAAA;YAAY,IAAA;YAAA;SAAA;cACVC,MAAMZ,CAAAA;YAAAA,IAAAA,EAAUa,QAAQ;YAAA;SAAA;cACxBC,MAAM,IAAA;YAAA,IAAA;YAAA;SAAA;;OACNC,UAAU;QACV,MAAA;IAAA;CAAA,WAA2C;;;IAK7CI,EAAAA,QAAU,eAAA,sBAAA,CAAA;QACRC,YAAYnB,YAAAA,sBAAAA,CAAAA;AACd,MAAA,eAAA;IACA,SAAA","ignoreList":[0],"debugId":null}}]
}