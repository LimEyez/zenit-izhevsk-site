{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/lib/dateUtils.ts"],"sourcesContent":["const monthNames = [\r\n    'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',\r\n    'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'\r\n];\r\nexport function formatToRuDayMonthYear(date: Date | string, showNameOfMonth: boolean = false): string | null {\r\n    const monthNames = [\r\n        'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',\r\n        'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'\r\n    ];\r\n\r\n    let parsedDate: Date;\r\n\r\n    if (date instanceof Date) {\r\n        parsedDate = date;\r\n    } else {\r\n        if (/^\\d{4}-\\d{2}-\\d{2}$/.test(date)) {\r\n            parsedDate = new Date(date + \"T00:00:00\");\r\n        } else {\r\n            parsedDate = new Date(date);\r\n        }\r\n    }\r\n\r\n    if (isNaN(parsedDate.getTime())) {\r\n        return null;\r\n    }\r\n\r\n    const day = String(parsedDate.getDate()).padStart(2, '0');\r\n    const month = showNameOfMonth\r\n        ? monthNames[parsedDate.getMonth()]\r\n        : String(parsedDate.getMonth() + 1).padStart(2, '0');\r\n    const separator = showNameOfMonth ? ' ' : '.';\r\n    const year = parsedDate.getFullYear();\r\n\r\n    return `${day}${separator}${month}${separator}${year}`;\r\n}\r\n\r\nexport function formatToRuTimeDayMonthYear(date: Date | string, showNameOfMonth: boolean = false): string | null {\r\n    let parsedDate: Date;\r\n\r\n    if (date instanceof Date) {\r\n        parsedDate = date;\r\n    } else {\r\n        // Проверим, если строка соответствует формату 'yyyy-mm-dd', то это только дата\r\n        if (/^\\d{4}-\\d{2}-\\d{2}$/.test(date)) {\r\n            parsedDate = new Date(date + \"T00:00:00\"); // добавляем время по умолчанию (00:00)\r\n        } else {\r\n            parsedDate = new Date(date);\r\n        }\r\n    }\r\n\r\n    if (isNaN(parsedDate.getTime())) {\r\n        return null; // Невалидная дата\r\n    }\r\n\r\n    const day = String(parsedDate.getDate()).padStart(2, '0');\r\n    const month = showNameOfMonth ? monthNames[parsedDate.getMonth()] : String(parsedDate.getMonth() + 1).padStart(2, '0');\r\n    const year = parsedDate.getFullYear();\r\n    const separator = showNameOfMonth ? ' ' : '.'\r\n\r\n    // Получаем время из parsedDate\r\n    const hours = String(parsedDate.getHours()).padStart(2, '0');\r\n    const minutes = String(parsedDate.getMinutes()).padStart(2, '0');\r\n\r\n    // Если время не указано, возвращаем только дату\r\n    const time = hours === '00' && minutes === '00' ? '' : `${hours}:${minutes}`;\r\n\r\n    // Возвращаем дату с временем, если оно есть\r\n    return time ? `${time}, ${day}${separator}${month}${separator}${year}` : `${day}${separator}${month}${separator}${year}`;\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;AAAA,MAAM,aAAa;IACf;IAAU;IAAW;IAAS;IAAU;IAAO;IAC/C;IAAQ;IAAW;IAAY;IAAW;IAAU;CACvD;AACM,SAAS,uBAAuB,IAAmB,EAAE,kBAA2B,KAAK;IACxF,MAAM,aAAa;QACf;QAAU;QAAW;QAAS;QAAU;QAAO;QAC/C;QAAQ;QAAW;QAAY;QAAW;QAAU;KACvD;IAED,IAAI;IAEJ,IAAI,gBAAgB,MAAM;QACtB,aAAa;IACjB,OAAO;QACH,IAAI,sBAAsB,IAAI,CAAC,OAAO;YAClC,aAAa,IAAI,KAAK,OAAO;QACjC,OAAO;YACH,aAAa,IAAI,KAAK;QAC1B;IACJ;IAEA,IAAI,MAAM,WAAW,OAAO,KAAK;QAC7B,OAAO;IACX;IAEA,MAAM,MAAM,OAAO,WAAW,OAAO,IAAI,QAAQ,CAAC,GAAG;IACrD,MAAM,QAAQ,kBACR,UAAU,CAAC,WAAW,QAAQ,GAAG,GACjC,OAAO,WAAW,QAAQ,KAAK,GAAG,QAAQ,CAAC,GAAG;IACpD,MAAM,YAAY,kBAAkB,MAAM;IAC1C,MAAM,OAAO,WAAW,WAAW;IAEnC,OAAO,GAAG,MAAM,YAAY,QAAQ,YAAY,MAAM;AAC1D;AAEO,SAAS,2BAA2B,IAAmB,EAAE,kBAA2B,KAAK;IAC5F,IAAI;IAEJ,IAAI,gBAAgB,MAAM;QACtB,aAAa;IACjB,OAAO;QACH,+EAA+E;QAC/E,IAAI,sBAAsB,IAAI,CAAC,OAAO;YAClC,aAAa,IAAI,KAAK,OAAO,cAAc,uCAAuC;QACtF,OAAO;YACH,aAAa,IAAI,KAAK;QAC1B;IACJ;IAEA,IAAI,MAAM,WAAW,OAAO,KAAK;QAC7B,OAAO,MAAM,kBAAkB;IACnC;IAEA,MAAM,MAAM,OAAO,WAAW,OAAO,IAAI,QAAQ,CAAC,GAAG;IACrD,MAAM,QAAQ,kBAAkB,UAAU,CAAC,WAAW,QAAQ,GAAG,GAAG,OAAO,WAAW,QAAQ,KAAK,GAAG,QAAQ,CAAC,GAAG;IAClH,MAAM,OAAO,WAAW,WAAW;IACnC,MAAM,YAAY,kBAAkB,MAAM;IAE1C,+BAA+B;IAC/B,MAAM,QAAQ,OAAO,WAAW,QAAQ,IAAI,QAAQ,CAAC,GAAG;IACxD,MAAM,UAAU,OAAO,WAAW,UAAU,IAAI,QAAQ,CAAC,GAAG;IAE5D,gDAAgD;IAChD,MAAM,OAAO,UAAU,QAAQ,YAAY,OAAO,KAAK,GAAG,MAAM,CAAC,EAAE,SAAS;IAE5E,4CAA4C;IAC5C,OAAO,OAAO,GAAG,KAAK,EAAE,EAAE,MAAM,YAAY,QAAQ,YAAY,MAAM,GAAG,GAAG,MAAM,YAAY,QAAQ,YAAY,MAAM;AAC5H","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/app/news/%5Bid%5D/page.tsx"],"sourcesContent":["import { formatToRuTimeDayMonthYear } from \"@/lib/dateUtils\"\r\n\r\nexport default async function NewsDetail({ params }: { params: Promise<{ id: string }> }) {\r\n    const { id } = await params\r\n\r\n    const data = {\r\n        src: '',\r\n        title: `Название новости ${(await params).id} (Ижевск, с 265-летием!)`,\r\n        date: '2025-01-01T16:40:00',\r\n        newsDescription: \"Подпись к новости. Подпись к новости. Подпись к новости. Подпись к новости. Подпись к новости. Подпись к новости. Подпись к новости. Подпись к новости.\"\r\n\r\n    }\r\n\r\n    const correctDateFormat = formatToRuTimeDayMonthYear(data.date, true);\r\n\r\n    return (\r\n        <div className=\"w-full flex flex-col items-center mt-[50px]\">\r\n            <div className=\"w-full max-w-[1200px] flex flex-col justify-center\">\r\n                <div className=\"w-full\">\r\n                    <p className=\"w-full text-[20px] font-medium text-white leading-none\">\r\n                        {correctDateFormat}\r\n                    </p>\r\n                </div>\r\n                <div className=\"w-full mt-[60px]\">\r\n                    <h1 className=\"w-full text-[60px] font-extrabold text-white leading-none\">\r\n                        {data.title}\r\n                    </h1>\r\n                </div>\r\n                <div className=\"w-full mt-[60px]\">\r\n                    <h1 className=\"w-full text-[30px] font-medium text-white leading-none\">\r\n                        {data.newsDescription}\r\n                    </h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,eAAe,WAAW,EAAE,MAAM,EAAuC;IACpF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IAErB,MAAM,OAAO;QACT,KAAK;QACL,OAAO,CAAC,iBAAiB,EAAE,CAAC,MAAM,MAAM,EAAE,EAAE,CAAC,wBAAwB,CAAC;QACtE,MAAM;QACN,iBAAiB;IAErB;IAEA,MAAM,oBAAoB,CAAA,GAAA,gHAAA,CAAA,6BAA0B,AAAD,EAAE,KAAK,IAAI,EAAE;IAEhE,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC;wBAAE,WAAU;kCACR;;;;;;;;;;;8BAGT,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC;wBAAG,WAAU;kCACT,KAAK,KAAK;;;;;;;;;;;8BAGnB,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC;wBAAG,WAAU;kCACT,KAAK,eAAe;;;;;;;;;;;;;;;;;;;;;;AAM7C","debugId":null}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Work/Liza/zenit-izhevsk-site/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAEgG,EAAC;AA8BvH,GAAE;;;;;;;;;AArBF,OAAO,MAAMG,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA;gBAED,YAAA;oBAAA,CAAc;oBAAA,mCAA0C;4BAAE,QAAA;4BAAA;4BAAA,CAA8C,EAAtB,AAAuB;4BAAA;gCAEzG,UAAA,CAAA;gCAAA,QAAA;oCAAA,IAAA,0BAA4D;oCAAA;iCAAA;4BAC5D;yBAAA,KAAO,MAAMC,cAAc,IAAIX,mBAAmB;;qBAChDY,YAAY;8BACVC,IAAAA,CAAMZ,CAAAA;oBAAAA;iBAAAA,KAAUa,QAAQ;;iBACxBC,MAAM;sBACNC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACV,2CAA2C;cAC3CC,IAAAA;YAAAA,IAAAA,CAAY;YAAA;SAAA;cACZC,OAAAA;YAAAA,EAAU,EAAA;YAAA;SAAA;cACVC,OAAAA;YAAAA,EAAU,EAAE;YAAA;SAAA;UACd,cAAA;YAAA,IAAA;YAAA;SAAA;;GACAC,UAAU;QACRC,MAAAA;IAAAA,KAAYnB;CAAAA","ignoreList":[0],"debugId":null}}]
}